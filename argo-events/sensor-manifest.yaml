apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: test-dep
      eventSourceName: webhook
      eventName: example
  triggers:
    - template:
        name: webhook-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: s3-react-upload-
              spec:
                entrypoint: git-clone
                podGC:
                  strategy: OnPodSuccess
                deleteDelayDuration: 10s
                templates:
                  - name: step-1
                    steps:
                      - - name: React app build and deploy to s3
                          template: React-app-build-and-deploy-to-s3
                          arguments:
                            parameters:
                              - name: url
                                value: hello world
                              - name: bucket_name
                                value: hello world
                      - - name: curl a Post method
                          template: curl-a-post-method

                  - name: React-app-build-and-deploy-to-s3
                    inputs:
                      parameters:
                        - name: url
                        - name: bucket_name
                      artifacts:
                        - name: argo-source
                          path: /src
                          git:
                            repo: "{{inputs.parameters.url}}"
                    container:
                      image: node:16-alpine3.17
                      command: [sh, -c]
                      args: ["npm install && npm run build"]
                      workingDir: /src
                    outputs:
                      artifacts:
                        - name: message
                          path: /src/build
                          archive:
                            none: {}
                          s3:
                            endpoint: s3.amazonaws.com
                            bucket: "{{inputs.parameters.bucket_name}}"
                            region: eu-west-2
                            key: "."
                            accessKeySecret:
                              name: mysecret
                              key: accessKey
                            secretKeySecret:
                              name: mysecret
                              key: secretKey

                  - name: curl-a-post-method
                    container:
                      image: curlimages/curl:latest
                      command:
                        - sh
                      source: |
                        http_response = $(curl -d '{"url":"https://github.com/ignitedotdev/react-app", "bucket_name": "ignite-react-app-2023"}' -H "Content-Type: application/json" -X POST http://localhost:5400/example)

          parameters:
            - src:
                dependencyName: test-dep
                dataKey: body.url
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: test-dep
                dataKey: body.bucket_name
              dest: spec.arguments.parameters.1.value
